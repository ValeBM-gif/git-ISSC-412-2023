------ Commands -------

- git clone
Crea una copia local del repositorio
git clone <url del repo>

- git status
Nos devueleve el estado actual del repositorio
git status

- git add
Prepara cambios (línea por línea) para ser incluidos en un commit.
git add notas.txt (agrega 1 archivo)
git add (agrega todos los archivos)

- git commit
Crea un nuevo commit con los cambios que preparamos con el comando de git add.
Tiene un ID de commit y un mensaje
got commit -m "<mensaje_commit>"

-git push
Sincroniza la rama remota con lo que hay en la local.
En otras palabras, sube los commits que hay en lo local y faltan en la remota
git push

- git fetch
Trae los metadatos sobre commits, ramas, refs, etc. de un repositorio remoto.
No descarga cambios a la rama local, solo trae los metadatos.
git fetch

- git pull
Sincroniza la rama local con lo que hay en la remota.
En otras palabras, descarga los commits que hay en la remota y faltan en la local
git pull


Ramas:
Las ramas nos permiten trabajar con el repositorio sin alterar la estabilidad de la rama principal.
Como cualquier otra rama, hay una local y una remota.
Las ramas parten de un commit de origen.

Integración de ramas: 
Para este fin, se utiliza la operación "merge".
Un merge combina los commits de una rama hacia otra en un solo commit conocido como un "merge commit".

Resolución de conflictos:
Estrategias:
1. Merge commit: crea un merge commit con cambios aplicados en el orden que el desarrollador elija.
2. Rebase: cambia el punto de origen de una rama, resolviendo conflictos durante la operación. 
            Requiere un "force push" para sobreescribir la rama remota

Pull request: 
Solicita la aprobaación de los cambios en una rama a otro colaborador, previo a la integración de las 
2 ramas (merge)